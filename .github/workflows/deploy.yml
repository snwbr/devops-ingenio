name: 'Node App CD'

on:
  push:
    branches: 
      - 'main'
      - 'develop'
    paths:
      - 'src/**'
  workflow_dispatch:


permissions:
  contents: read

jobs:
  deploy_code:
    name: 'Build and test'
    runs-on: ubuntu-latest
    environment: dev
    defaults:
      run:
        shell: bash
        working-directory: ./src/
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    ## Code quality and build

    - run: npm test

    - id: 'auth'
      uses: 'google-github-actions/auth@v2'
      with:
        credentials_json: '${{ secrets.GOOGLE_CREDENTIALS }}'

    ## Setting up repositories

    - name: 'Set up Cloud SDK'
      uses: 'google-github-actions/setup-gcloud@v2'

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: 'Setup GC Artifact Registry'
      run: 'gcloud auth configure-docker us-central1-docker.pkg.dev'

    - name: Login to GC Artifact Registry
      uses: docker/login-action@v3
      with:
        registry: us-central1-docker.pkg.dev
        username: _json_key
        password: ${{ secrets.GOOGLE_CREDENTIALS }}

    ## Image creation

    - name: Customizing image for DEV
      if: github.ref == 'refs/heads/develop'
      run: "sed 's/Hello/DEV Environment: Hello/g;w index.js' index.js"

    - name: Build and push
      if: github.ref == 'refs/heads/develop'
      uses: docker/build-push-action@v5
      with:
        context: ./src/
        platforms: linux/amd64
        push: true
        tags: |
          us-central1-docker.pkg.dev/test-snwbr/ingenio/nodeapp:${{ github.run_id }}-dev
    
    - name: Customizing image for PROD
      if: github.ref == 'refs/heads/main'
      run: "sed 's/DEV/PROD/g;w index.js' index.js"

    - name: Build and push
      if: github.ref == 'refs/heads/main'
      uses: docker/build-push-action@v5
      with:
        context: ./src/
        platforms: linux/amd64
        push: true
        tags: |
          us-central1-docker.pkg.dev/test-snwbr/ingenio/nodeapp:${{ github.run_id }}
          us-central1-docker.pkg.dev/test-snwbr/ingenio/nodeapp:latest

    ## Setting up kubernetes

    - name: 'Install kubectl'
      run: gcloud components install kubectl

    - name: 'Setup DEV GKE'
      if: github.ref == 'refs/heads/develop'
      run: 'gcloud container clusters get-credentials dev-gke --zone us-central1-c --project test-snwbr'
    
    - name: "Helm deploy to DEV"
      if: github.ref == 'refs/heads/develop'
      uses: WyriHaximus/github-action-helm3@v4.0.1
      with:
        exec: |
          helm upgrade --install --set env=dev --set imageTag=us-central1-docker.pkg.dev/test-snwbr/ingenio/nodeapp:${{ github.run_id }}-dev --values=k8s/charts/hello-world/values.yaml hello-world k8s/charts/hello-world

    - name: 'Setup PROD GKE'
      if: github.ref == 'refs/heads/main'
      run: 'gcloud container clusters get-credentials prod-gke --region us-central1 --project test-snwbr'
    
    - name: "Helm deploy to PROD"
      if: github.ref == 'refs/heads/main'
      uses: WyriHaximus/github-action-helm3@v4.0.1
      with:
        exec: |
          helm upgrade --install --set env=prod --set imageTag=us-central1-docker.pkg.dev/test-snwbr/ingenio/nodeapp:${{ github.run_id }} --values=k8s/charts/hello-world/values.yaml hello-world k8s/charts/hello-world
